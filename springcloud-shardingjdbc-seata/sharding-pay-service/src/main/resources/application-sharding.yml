spring:
  shardingsphere:
    datasource:
      names: ds0, ds1,ds2,ds3
      ds0:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://172.19.125.214:3306/sharding-seata-master1?useUnicode=true&characterEncoding=UTF-8&useSSL=false
        username: root
        password: stcn123456
      ds2:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://172.19.126.90:3306/sharding-seata-master1?useUnicode=true&characterEncoding=UTF-8&useSSL=false
        username: root
        password: stcn123456
      ds1:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://172.19.125.214:3306/sharding-seata-master2?useUnicode=true&characterEncoding=UTF-8&useSSL=false
        username: root
        password: stcn123456
      ds3:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://172.19.126.90:3306/sharding-seata-master2?useUnicode=true&characterEncoding=UTF-8&useSSL=false
        username: root
        password: stcn123456
#    masterslave:
#      # 读写分离配置
#      load-balance-algorithm-type: round_robin
#      # 最终的数据源名称
#      name: ds0,ds1
#      # 主库数据源名称
#      master-data-source-name: ds0,ds1
#      # 从库数据源名称列表，多个逗号分隔
#      slave-data-source-names: ds2,ds3
    sharding:
      master-slave-rules:
        ms_0:
          master-data-source-name: ds0
          # 从库数据源名称列表，多个逗号分隔
          slave-data-source-names: ds2
        ms_1:
          master-data-source-name: ds1
          # 从库数据源名称列表，多个逗号分隔
          slave-data-source-names: ds3
      tables:
        t_pay:
          actual-data-nodes: ms_$->{0..1}.t_pay$->{0..1}
          key-generator:
            column: id
            type: SNOWFLAKE
            props:
              worker.id = 1
          table-strategy:
            inline:
              sharding-column: id
              algorithm-expression: t_pay$->{id % 2}
          database-strategy:
            inline:
              sharding-column: user_id
              algorithm-expression: ms_$->{user_id % 2}
    props:
      sql.show: true
eureka:
  instance:
    lease-renewal-interval-in-seconds: 1
    lease-expiration-duration-in-seconds: 3
  client:
    serviceUrl:
      #defaultZone: http://eureka-server-peer1:8888/eureka/,http://eureka-server-peer3:8887/eureka/,http://eureka-server-peer2:8889/eureka/
      defaultZone: http://eureka-server-peer1:8888/eureka/
